// Code generated by "stringer -type=Piece"; DO NOT EDIT.

package game

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[None-0]
	_ = x[FaceDown-2]
	_ = x[RedCannon-4]
	_ = x[RedPawn-8]
	_ = x[RedHorse-16]
	_ = x[RedCart-32]
	_ = x[RedElephant-64]
	_ = x[RedGuard-128]
	_ = x[RedKing-256]
	_ = x[BlackCannon-512]
	_ = x[BlackPawn-1024]
	_ = x[BlackHorse-2048]
	_ = x[BlackCart-4096]
	_ = x[BlackElephant-8192]
	_ = x[BlackGuard-16384]
	_ = x[BlackKing-32768]
}

const _Piece_name = "NoneFaceDownRedCannonRedPawnRedHorseRedCartRedElephantRedGuardRedKingBlackCannonBlackPawnBlackHorseBlackCartBlackElephantBlackGuardBlackKing"

var _Piece_map = map[Piece]string{
	0:     _Piece_name[0:4],
	2:     _Piece_name[4:12],
	4:     _Piece_name[12:21],
	8:     _Piece_name[21:28],
	16:    _Piece_name[28:36],
	32:    _Piece_name[36:43],
	64:    _Piece_name[43:54],
	128:   _Piece_name[54:62],
	256:   _Piece_name[62:69],
	512:   _Piece_name[69:80],
	1024:  _Piece_name[80:89],
	2048:  _Piece_name[89:99],
	4096:  _Piece_name[99:108],
	8192:  _Piece_name[108:121],
	16384: _Piece_name[121:131],
	32768: _Piece_name[131:140],
}

func (i Piece) String() string {
	if str, ok := _Piece_map[i]; ok {
		return str
	}
	return "Piece(" + strconv.FormatInt(int64(i), 10) + ")"
}
